/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2022-01-16 12:46:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;

public final class mainpage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\",initial-scale=\"1\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/onlymine.css\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("	.hi{\r\n");
      out.write("		background-color:yellow;\r\n");
      out.write("		font-size:30px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.jumbotron {\r\n");
      out.write("	  padding-top: 30px;\r\n");
      out.write("	  padding-bottom: 30px;\r\n");
      out.write("	  margin-bottom: 30px;\r\n");
      out.write("	  color: inherit;\r\n");
      out.write("	  background-color: white;\r\n");
      out.write("	}\r\n");
      out.write("	li{\r\n");
      out.write("		font-size:15px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
 
		String userID=null;
		if(session.getAttribute("userID") != null){
			userID=(String)session.getAttribute("userID");
		}
	
      out.write(" \r\n");
      out.write("	<nav class=\"navbar navbar-inverse\">\r\n");
      out.write("		<div class=\"navbar-header\">\r\n");
      out.write("			<a class=\"navbar-brand\" href =\"mainpage\" style=\"font-size:25px;\">JSP활용한 페이지 만들기</a>\r\n");
      out.write("			<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" \r\n");
      out.write("			data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\"> <!-- collapse는 숨기기 기능  -->\r\n");
      out.write("				<span class=\"icon-bar\"></span>\r\n");
      out.write("				<span class=\"icon-bar\"></span>\r\n");
      out.write("				<span class=\"icon-bar\"></span>\r\n");
      out.write("				\r\n");
      out.write("			</button>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"collapse navbar-collapse\" id =bs-example-navbar-collapse-1>\r\n");
      out.write("			<ul class=\"nav navbar-nav\">\r\n");
      out.write("				<li style=\"font-size:15px;\"><a href=\"mainpage\">메인</a></li>\r\n");
      out.write("				<li style=\"font-size:15px;\"><a href=\"Mymenu\">내가 만들 메뉴</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("			\r\n");
      out.write("			");

			if(userID==null){
			
      out.write("\r\n");
      out.write("			<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("				<li class=\"dropdown\">\r\n");
      out.write("					<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\r\n");
      out.write("					aria-expanded=\"false\">접속하기<span class=\"caret\"></span></a>\r\n");
      out.write("					<ul class=\"dropdown-menu\">\r\n");
      out.write("						<li><a href=\"login\">로그인</a></li>\r\n");
      out.write("						<li><a href=\"join\">회원가입</a></li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("			");

				}else{
			
      out.write("\r\n");
      out.write("			<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("				<li class=\"dropdown\">\r\n");
      out.write("					<a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\r\n");
      out.write("					aria-expanded=\"false\">회원관리<span class=\"caret\"></span></a>\r\n");
      out.write("					<ul class=\"dropdown-menu\">\r\n");
      out.write("						<li class=\"hi\"><a href=\"#\">");
      out.print( userID );
      out.write("</a></li>\r\n");
      out.write("						<li><a href=\"logoutAction\">로그아웃</a></li>\r\n");
      out.write("						\r\n");
      out.write("					</ul>\r\n");
      out.write("				</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("			");

				}
			
      out.write("\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("	<div class=\"jumbotron\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<h1>웹 사이트 소개.</h1>\r\n");
      out.write("			<p>이 웹사이트는 이태일이 만든 웹사이트입니다.<br>앞으로 잘 부탁드립니다.<br>즐겁게 만들어본 웹페이지 입니다.</p>\r\n");
      out.write("			<p><a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\" style = \"background-color: white; border-color:white; color:black;\">Learn more</a></p>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("		<div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\r\n");
      out.write("			<ol class=\"carousel-indicators\">\r\n");
      out.write("				<li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>\r\n");
      out.write("				<li data-target=\"#myCarousel\" data-slide-to=\"1\" class=\"active\"></li>\r\n");
      out.write("				<li data-target=\"#myCarousel\" data-slide-to=\"2\" class=\"active\"></li>\r\n");
      out.write("			</ol>\r\n");
      out.write("			<div class=\"carousel-inner\">\r\n");
      out.write("				<div class=\"item active\">\r\n");
      out.write("					<img src=\"image/im4.png\" style=\"width:3000px;\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"item\">\r\n");
      out.write("					<img src=\"image/im5.jpg\" style=\"width:3000px;\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"item\">\r\n");
      out.write("					<img src=\"image/im6.png\" style=\"width:3000px;\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\" style=\"width:70px;\">\r\n");
      out.write("				<span class=\"glyphicon glyphicon-chevron-left\"></span>\r\n");
      out.write("			</a>\r\n");
      out.write("			<a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\" style=\"width:70px;\">\r\n");
      out.write("				<span class=\"glyphicon glyphicon-chevron-right\"></span>\r\n");
      out.write("			</a>\r\n");
      out.write("		</div>\r\n");
      out.write("			\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"http://code.jquery.com/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("	<script src=\"js/bootstrap.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
